from ..db import db
from .utils import make_datum, make_object_datum, make_test


def test_basic_search_of_all_objects(client, user):
    query = 'hello'

    # find a datum with the query in its name
    d1 = make_datum()
    d1.name = 'hello world'

    # or in its value
    d2 = make_datum()
    d2.value = 'asdfhelloasdf'

    # or in the name of one of its children
    d3 = make_object_datum()
    d3.children[0].name = 'hello child datum'

    # and make one datum _not_ to find
    d4 = make_datum()

    # find a test with the query in its name
    t1 = make_test()
    t1.name = 'a basic hello world test'

    # or in the label of one of its data
    t2 = make_test()
    t2.data[0].label = 'the hello item'

    # and a test _not_ to find
    t3 = make_test()

    db.session.commit()

    resp = client.post('/search', headers=user.auth_headers, json=dict(
        type='ALL', query=query
    ))

    datum_ids = list(map(lambda d: d['id'], resp['data']))
    test_ids = list(map(lambda t: t['id'], resp['tests']))

    assert set(datum_ids) == set([d1.id, d2.id, d3.id])
    assert set(test_ids) == set([t1.id, t2.id])
    assert d4.id not in datum_ids
    assert t3.id not in test_ids


def test_can_search_for_only_tests(client, user):
    pass


def test_can_search_for_only_data(client, user):
    pass


def test_results_have_no_duplicate_objects(client, user):
    query = 'hello'

    # or in the name of one of its children
    d1 = make_object_datum()
    d1.name = 'yet another hello'
    d1.value = 'a hello value'
    d1.children[0].name = 'hello child datum'

    # find a test with the query in its name and a label
    t1 = make_test()
    t1.name = 'a basic hello world test'
    t1.data[0].label = 'the hello item'

    db.session.commit()

    resp = client.post('/search', headers=user.auth_headers, json=dict(
        type='ALL', query=query
    ))

    datum_ids = list(map(lambda d: d['id'], resp['data']))
    test_ids = list(map(lambda t: t['id'], resp['tests']))

    assert datum_ids == [d1.id]
    assert test_ids == [t1.id]
